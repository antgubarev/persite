<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>development on antgubarev</title><link>https://antgubarev.dev/tags/development/</link><description>Recent content in development on antgubarev</description><generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Fri, 28 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://antgubarev.dev/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Что должен разработчик знать о git</title><link>https://antgubarev.dev/post/git_min/</link><pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate><guid>https://antgubarev.dev/post/git_min/</guid><description>Проводя собеседования, каждый раз задаю вопросы по git. И как показывает практика подавляющее большинство &amp;ldquo;синьоров&amp;rdquo;, не говоря уже о миддлах, очень смутно представляют как git работает. Ну да, выучили несколько самых часто используемых команд, успешно их применяют и радуются жизни. И от недостаточных незнаний часто допускают ошибки, которые могут приводить к страданиям всей команды. Когда встает вопрос сделать что-то сложнее git checkout/commit/merge/push начинают плавать и в лучшем случае говорят что не знают как сделать, а в худшем начинают творить всякое.</description></item><item><title>Немного о выборе инструментов</title><link>https://antgubarev.dev/post/choosing-tools/</link><pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate><guid>https://antgubarev.dev/post/choosing-tools/</guid><description>Хочу поделиться опытом, полученным мною довольно давно, но урок из него я усвоил крепко.
Возникла у меня на одном из проектов необходимость развернуть приложение в контейнерах. Сервисов было немного - три или четыре штуки всего. Вероятность резкого масштабирования в будущем также была очень мала. Но по условиям задачи необходимо было раскидать сервисы по 2 машинам, на одной всякого рода фоновые ресурсоемкие задачи, а на другой машине все остальное, что должно отвечать максимально быстро на запросы от пользователей.</description></item><item><title>Должен ли тимлид писать код?</title><link>https://antgubarev.dev/post/should-teamlead-write-code/</link><pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate><guid>https://antgubarev.dev/post/should-teamlead-write-code/</guid><description>Общаясь с коллегами и читая тематические каналы выявил, что большинство тимлидов код не пишут. Они часто загружены менеджерскими задачами на столько, что на код времени просто не остается. В некоторых компаниях руководство запрещает код писать, чтобы тимлиды не отвлекались от главной задачи - управления.
Я же всегда старался придерживаться баланса кода и менеджера в равных пропорциях. Объясню почему.
Во-первых, я люблю писать код) Мне это нравится делать и я его пишу даже в нерабочее время частенько (для себя, сайд проекты, но это отдельная тема)</description></item></channel></rss>